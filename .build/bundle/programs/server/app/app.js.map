{"version":3,"sources":["meteor://ðŸ’»app/imports/api/RaceDB/server/publications.js","meteor://ðŸ’»app/imports/api/RaceDB/RaceDB.js","meteor://ðŸ’»app/imports/api/RaceDB/methods.js","meteor://ðŸ’»app/imports/startup/both/index.js","meteor://ðŸ’»app/imports/startup/server/fixtures.js","meteor://ðŸ’»app/imports/startup/server/index.js","meteor://ðŸ’»app/imports/startup/server/register-api.js","meteor://ðŸ’»app/imports/startup/server/routes.js","meteor://ðŸ’»app/server/main.js"],"names":["Meteor","module","watch","require","v","RaceDB","publish","find","export","StopWatch","Mongo","Collection","check","JsonRoutes","add","req","res","next","console","log","data","sendResult","upsert","name","action","remove","Router","route","request","response","body","insert","end","where"],"mappings":"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","file":"/app.js","sourcesContent":["// All RaceDB-related publications\n\nimport { Meteor } from 'meteor/meteor';\nimport { RaceDB } from '../RaceDB.js';\n\nMeteor.publish('RaceDB.all', function() {\n    return RaceDB.find();\n});","// Definition of the RaceDB collection\n\nimport { Mongo } from 'meteor/mongo';\n\nexport const RaceDB = new Mongo.Collection('RaceDB');\nexport const StopWatch = new Mongo.Collection('StopWatch');","// Methods related to RaceDB\n\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { RaceDB } from './RaceDB.js';\n\n// Meteor.methods({\n//     'RaceDB.insert' (title, url) {\n//         check(url, String);\n//         check(title, String);\n\n//         return RaceDB.insert({\n//             url,\n//             title,\n//             createdAt: new Date(),\n//         });\n//     },\n// });","// Import modules used by both client and server through a single index entry point\n// e.g. useraccounts configuration file.\n","// Fill the DB with example data on startup\n\nimport { Meteor } from 'meteor/meteor';\nimport { RaceDB, StopWatch } from '../../api/RaceDB/RaceDB.js';\n\n// Meteor.startup(() => {\n//     console.log('Insert some dummy data if the RaceDB and stopwatch collection is empty');\n//     if (StopWatch.find().count() === 0) {\n//         StopWatch.insert({ action: 'start' });\n//     }\n\n//     if (RaceDB.find().count() === 0) {\n//         const data = [\n//             { carId: \"car02\", lapNr: 43, lapTime: \"0:6:417\" },\n//             { carId: \"car02\", lapNr: 33, lapTime: \"0:4:417\" },\n//             { carId: \"car02\", lapNr: 13, lapTime: \"0:6:417\" },\n//             { carId: \"car01\", lapNr: 43, lapTime: \"0:6:417\" },\n//             { carId: \"car01\", lapNr: 33, lapTime: \"0:4:417\" },\n//             { carId: \"car01\", lapNr: 13, lapTime: \"0:6:417\" }\n//         ];\n\n//         data.forEach(lap => RaceDB.insert(lap));\n//     }\n// });","// Import server startup through a single index entry point\n\nimport './fixtures.js';\nimport './register-api.js';\nimport './routes.js';","// Register your apis here\n\nimport '../../api/RaceDB/methods.js';\nimport '../../api/RaceDB/server/publications.js';","import {\r\n    RaceDB,\r\n    StopWatch\r\n} from '/imports/api/RaceDB/RaceDB.js';\r\n\r\nJsonRoutes.add(\"get\", \"/start_stopwatch\", function(req, res, next) {\r\n    console.log('start_stopwatch GET request: \"', req.data);\r\n\r\n    JsonRoutes.sendResult(res, {\r\n        data: 'You should make a POST call'\r\n    });\r\n});\r\n\r\nJsonRoutes.add(\"post\", \"/start_stopwatch\", function(req, res, next) {\r\n    console.log('start_stopwatch POST request: \"', req);\r\n    StopWatch.upsert({\r\n        name: \"timer\"\r\n    }, {\r\n        name: \"timer\",\r\n        action: 'start'\r\n    }, {\r\n        upsert: true\r\n    });\r\n    JsonRoutes.sendResult(res, {\r\n        data: 'Started watch'\r\n    });\r\n});\r\n\r\nJsonRoutes.add(\"post\", \"/stop_stopwatch\", function(req, res, next) {\r\n    console.log('start_stopwatch POST request: \"', req.data);\r\n    StopWatch.upsert({\r\n        name: \"timer\"\r\n    }, {\r\n        name: \"timer\",\r\n        action: 'stop'\r\n    }, {\r\n        upsert: true\r\n    });\r\n    JsonRoutes.sendResult(res, {\r\n        data: 'Started watch'\r\n    });\r\n});\r\n\r\nJsonRoutes.add(\"post\", \"/reset_stopwatch\", function(req, res, next) {\r\n    console.log('RESET stopwatch POST request');\r\n\r\n    RaceDB.remove({});\r\n\r\n    StopWatch.upsert({\r\n        name: \"timer\"\r\n    }, {\r\n        name: \"timer\",\r\n        action: 'reset'\r\n    }, {\r\n        upsert: true\r\n    });\r\n});\r\n\r\n//\r\n// â”€â”€â”€ LAPTIMES â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\r\n//\r\n\r\nRouter.route(\"/laptimes\", function() {\r\n    var req = this.request;\r\n    var res = this.response;\r\n\r\n    var data = this.request.body;\r\n    console.log('laptimes data', data);\r\n    RaceDB.insert(data);\r\n    res.end('hello from the server\\n');\r\n\r\n}, {\r\n    where: \"server\"\r\n});","// Server entry point, imports all server code\nimport '/imports/startup/server';\nimport '/imports/startup/both';"]}